name: firecrawl

x-common-env: &common-env
  REDIS_URL: ${REDIS_URL:-redis://redis:6379}
  REDIS_RATE_LIMIT_URL: ${REDIS_URL:-redis://redis:6379}
  PLAYWRIGHT_MICROSERVICE_URL: ${PLAYWRIGHT_MICROSERVICE_URL:-http://playwright-service:3000/scrape}
  NUQ_DATABASE_URL: postgres://postgres:postgres@nuq-postgres:5432/postgres
  USE_DB_AUTHENTICATION: ${USE_DB_AUTHENTICATION}
  OPENAI_API_KEY: ${OPENAI_API_KEY}
  OPENAI_BASE_URL: ${OPENAI_BASE_URL}
  MODEL_NAME: ${MODEL_NAME}
  MODEL_EMBEDDING_NAME: ${MODEL_EMBEDDING_NAME} 
  OLLAMA_BASE_URL: ${OLLAMA_BASE_URL} 
  SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
  BULL_AUTH_KEY: ${BULL_AUTH_KEY}
  TEST_API_KEY: ${TEST_API_KEY}
  POSTHOG_API_KEY: ${POSTHOG_API_KEY}
  POSTHOG_HOST: ${POSTHOG_HOST}
  SUPABASE_ANON_TOKEN: ${SUPABASE_ANON_TOKEN}
  SUPABASE_URL: ${SUPABASE_URL}
  SUPABASE_SERVICE_TOKEN: ${SUPABASE_SERVICE_TOKEN}
  SELF_HOSTED_WEBHOOK_URL: ${SELF_HOSTED_WEBHOOK_URL}
  SERPER_API_KEY: ${SERPER_API_KEY}
  SEARCHAPI_API_KEY: ${SEARCHAPI_API_KEY}
  LOGGING_LEVEL: ${LOGGING_LEVEL}
  PROXY_SERVER: ${PROXY_SERVER}
  PROXY_USERNAME: ${PROXY_USERNAME}
  PROXY_PASSWORD: ${PROXY_PASSWORD}
  SEARXNG_ENDPOINT: ${SEARXNG_ENDPOINT}
  SEARXNG_ENGINES: ${SEARXNG_ENGINES}
  SEARXNG_CATEGORIES: ${SEARXNG_CATEGORIES}

services:
  nuq-postgres:
    # build: apps/nuq-postgres
    image: ghcr.io/cmoi936/nuq-postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - firecrawl-net
    ports:
      - "5433:5432"

  playwright-service:
    # NOTE: If you don't want to build the service locally,
    # uncomment the build: statement and comment out the image: statement
    image: ghcr.io/cmoi936/playwright-service:latest
    #build: apps/playwright-service-ts
    environment:
      PORT: 3000
      PROXY_SERVER: ${PROXY_SERVER}
      PROXY_USERNAME: ${PROXY_USERNAME}
      PROXY_PASSWORD: ${PROXY_PASSWORD}
      BLOCK_MEDIA: ${BLOCK_MEDIA}
    networks:
      - firecrawl-net

  redis:
    # NOTE: If you don't want to pull the image from Docker Hub,
    #image: redis:alpine
    image: ghcr.io/cmoi936/redis:alpine

    networks:
      - firecrawl-net
    command: redis-server --bind 0.0.0.0

  api:
    image: ghcr.io/cmoi936/firecrawl-api:latest
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    networks:
      - firecrawl-net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      <<: *common-env
      HOST: "0.0.0.0"
      PORT: ${INTERNAL_PORT:-3002}
      WORKER_PORT: ${WORKER_PORT:-3005}
      EXTRACT_WORKER_PORT: ${EXTRACT_WORKER_PORT:-3012}
      ENV: local
    depends_on:
      - redis
      - playwright-service
      - nuq-postgres 
    ports:
      - "${PORT:-3002}:${INTERNAL_PORT:-3002}"
    command: node dist/src/harness.js --start-docker

  firecrawl-mcp:
    image: ghcr.io/cmoi936/firecrawl-mcp:latest
    container_name: firecrawl-mcp
    environment:
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY:?Veuillez saisir votre FIRECRAWL_API_KEY avec `export FIRECRAWL_API_KEY=xxx`}
      - FIRECRAWL_API_URL=http://api:3002
    depends_on:
      api:
        condition: service_started
    stdin_open: true
    tty: true
    networks:
      - firecrawl-net
    restart: unless-stopped

networks:
  firecrawl-net:
    driver: bridge
